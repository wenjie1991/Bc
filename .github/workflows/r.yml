name: R

on:
  push:
    branches: [ "devel" ]
  pull_request:
    branches: [ "devel" ]

permissions:
  contents: read

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['4.3.0']

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "r-dependencies.rds")
        shell: Rscript {0}

      - name: Cache R dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r-version }}-${{ hashFiles('r-dependencies.rds') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.r-version }}-

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Install pandoc
        run: brew install pandoc

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

  linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        r-version: ['4.3.0']

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "r-dependencies.rds")
        shell: Rscript {0}

      - name: Cache R dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r-version }}-${{ hashFiles('r-dependencies.rds') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.r-version }}-

      - name: Install pandoc
        run: sudo apt-get install pandoc libcurl4-openssl-dev

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        r-version: ['4.3.0']

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "r-dependencies.rds")
        shell: Rscript {0}

      - name: Cache R dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r-version }}-${{ hashFiles('r-dependencies.rds') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.r-version }}-

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Install pandoc
        run: choco install pandoc

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

